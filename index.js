//problem-1
function reverseString(str) {
  return str.split('').reverse().join('');
}

console.log(reverseString("hello"));

// ЁЯФ╣ str.split('')
// ЁЯСЙ ржПржЯрж╛ ржПржХржЯрж╛ string ржХрзЗ ржнрзЗржЩрзЗ character ржЧрзБрж▓рж╛ ржЖрж▓рж╛ржжрж╛ ржХрж░рзЗ ржПржХржЯрж╛ array ржмрж╛ржирж╛рзЯред
// "hello" тЮЭ ['h', 'e', 'l', 'l', 'o']

// ЁЯФ╣ .reverse()
// ЁЯСЙ ржПржЗ array ржЯрж╛ ржХрзЗ ржЙрж▓рзНржЯрж╛рзЯрзЗ ржлрзЗрж▓рзЗред
// ['h', 'e', 'l', 'l', 'o'] тЮЭ ['o', 'l', 'l', 'e', 'h']

// ЁЯФ╣ .join('')
// ЁЯСЙ array ржерзЗржХрзЗ ржЖржмрж╛рж░ string ржмрж╛ржирж╛рзЯ, ржХрзЛржирзЛ separator ржирж╛ ржжрж┐рзЯрзЗред
// ['o', 'l', 'l', 'e', 'h'] тЮЭ "olleh"



//problem-2
function countVowels(str) {
  const vowels = 'aeiouAEIOU';
  let count = 0;

  for (let char of str) {
    if (vowels.includes(char)) {
      count++;
    }
  }

  return count;
}

console.log(countVowels("programming")); 

// const vowels = 'aeiouAEIOU';
// ЁЯСЙ рж╕ржм ржЫрзЛржЯрж╣рж╛ржд ржЖрж░ ржмрзЬрж╣рж╛ржд vowel ржЧрзБрж▓рж╛ ржПржХрж╕рж╛ржерзЗ ржПржХржЯрж╛ string ржП рж░рж╛ржЦржЫрж┐ред

// let count = 0;
// ЁЯСЙ vowel ржХрзЯржЯрж╛ ржкрж╛ржЗрж▓рж╛ржо, ржУрж░ рж╣рж┐рж╕рж╛ржм рж░рж╛ржЦрж╛рж░ ржЬржирзНржп ржПржХржЯрж╛ ржХрж╛ржЙржирзНржЯрж╛рж░ ржирж┐ржЪрзНржЫрж┐ред

// for (let char of str)
// ЁЯСЙ ржкрзБрж░рзЛ string ржПрж░ ржЙржкрж░ рж▓рзБржк ржЪрж╛рж▓рж╛ржЗржЫрж┐ тАФ ржкрзНрж░рждрж┐ржЯрж╛ character ржПрж░ ржЙржкрж░ред

// if (vowels.includes(char))
// ЁЯСЙ ржпржжрж┐ character ржЯрж╛ vowel list ржПрж░ ржоржзрзНржпрзЗ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗржЗ count++;

// рж╢рзЗрж╖рзЗ return count;
// ЁЯСЙ рж╕ржм ржШрзБржЗрж░рж╛ ржмрзЗрж░ ржХржЗрж░рж╛ vowel ржПрж░ рж╕ржВржЦрзНржпрж╛ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржЫрзЗред

//problem-3
function isPalindrome(str) {
  const reversed = str.split('').reverse().join('');
  return str === reversed;
}

console.log(isPalindrome("madam")); 
console.log(isPalindrome("hello"));

// str.split('')
// ЁЯСЙ string ржЯрж╛ржХрзЗ character ржЧрзБрж▓рж╛рзЯ ржнрж╛ржЧ ржХрж░рж┐ (array ржмрж╛ржирж╛ржЗ)ред
// Example: "madam" тЖТ ['m', 'a', 'd', 'a', 'm']

// .reverse()
// ЁЯСЙ array ржЯрж╛ ржЙрж▓рзНржЯрж╛рзЯ ржлрзЗрж▓рж┐ред
// ['m', 'a', 'd', 'a', 'm'] тЖТ ['m', 'a', 'd', 'a', 'm'] (ржПржЗ case ржП same ЁЯШД)

// .join('')
// ЁЯСЙ ржЖржмрж╛рж░ string ржмрж╛ржирж╛ржЗред
// Output: "madam"

//problem-4
function findMaxNumber(arr) {
  return Math.max(...arr);
}

console.log(findMaxNumber([5, 1, 9, 3])); // Output: 9

// Math.max()
// ЁЯСЙ JavaScript-ржПрж░ built-in function, ржпрзЗржЯрж╛ multiple number-ржПрж░ ржоржзрзНржпрзЗ рж╕ржмржЪрзЗрзЯрзЗ ржмрзЬржЯрж╛ return ржХрж░рзЗред
// Example: Math.max(1, 5, 9) тЮЭ 9

// ...arr
// ЁЯСЙ ржПржЗржЯрж╛ spread operator, ржпрзЗржЯрж╛ array ржЯрж╛ржХрзЗ ржнрзЗржЩрзЗ ржжрзЗрзЯ ржЖрж▓рж╛ржжрж╛ ржЖрж▓рж╛ржжрж╛ value-рждрзЗред
// [5, 1, 9, 3] тЮЭ 5, 1, 9, 3

//problem-5
function removeDuplicates(arr) {
  return [...new Set(arr)];
}

console.log(removeDuplicates([1, 2, 2, 3, 4, 4])); 
// Output: [1, 2, 3, 4]
// new Set(arr)
// ЁЯСЙ JavaScript-ржПрж░ Set рж╣рж▓ ржПржоржи ржПржХржЯрж╛ ржЬрж┐ржирж┐рж╕ ржпрзЗржЯрж╛ same value ржПржХрж╛ржзрж┐ржХ ржмрж╛рж░ рж░рж╛ржЦрзЗ ржирж╛ред
// Example:
// new Set([1, 2, 2, 3]) тЮЭ Set {1, 2, 3}

// [...new Set(arr)]
// ЁЯСЙ Set ржЯрж╛ржХрзЗ ржЖржмрж╛рж░ normal array ржмрж╛ржирж╛рждрзЗ spread operator ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржЫрж┐ред
// So final output: [1, 2, 3]

//problem-6 
function sumArray(arr) {
  let sum = 0;
  for (let i = 0; i < arr.length; i++) {
    sum += arr[i];
  }
  return sum;
}

// 1я╕ПтГг function sumArray(arr) {...}

// ЁЯСЙ ржПржЯрж╛ ржПржХржЯрж╛ ржлрж╛ржВрж╢ржи, ржирж╛ржо sumArray.
// ЁЯСЙ ржПржЯрж╛ ржПржХржЯрж╛ array ржирзЗрзЯ тАФ ржорж╛ржирзЗ ржЕржирзЗржХ рж╕ржВржЦрзНржпрж╛ ржПржХрж╕рж╛ржерзЗ (ржпрзЗржоржи [1, 2, 3])

// 2я╕ПтГг let sum = 0;

// ЁЯСЙ ржПржХржЯрж╛ ржЦрж╛рж▓рж┐ ржЦрж╛рждрж╛ ржмрж╛ржирж╛ржЗржЫрзЗ ржпрж╛рж░ ржирж╛ржо sum
// ЁЯСЙ ржкрзНрж░ржержорзЗ ржУржЦрж╛ржирзЗ ржХрж┐ржЫрзБ ржирж╛ржЗ, ржорж╛ржирзЗ 0

// 3я╕ПтГг for (let i = 0; i < arr.length; i++) {...}

// ЁЯСЙ ржПржЯрж╛ ржПржХржЯрж╛ ржШрзБрж░рзНржирж┐ржкрж╛ржХ! (loop)
// ЁЯСЙ array ржПрж░ ржкрзНрж░рждрж┐ржЯрж╛ рж╕ржВржЦрзНржпрж╛ ржПржХ ржПржХ ржХрж░рзЗ ржШрзБрж░рзЗ ржжрзЗржЦржмрзЗ

// 4я╕ПтГг sum += arr[i];

// ЁЯСЙ ржкрзНрж░рждрж┐ржЯрж╛ рж╕ржВржЦрзНржпрж╛ sum ржПрж░ рж╕рж╛ржерзЗ ржпрзЛржЧ ржХрж░рзЗ ржлрзЗрж▓рждрзЗржЫрзЗ

// 5я╕ПтГг return sum;

// ЁЯСЙ рж╕ржм ржпрзЛржЧ рж╣рзЯрзЗ ржЧрзЗрж▓рзЗ, рж╕рзЗржЗ final total ржЯрж╛ ржжрж┐рзЯрзЗ ржжрж┐ржЪрзНржЫрзЗ

//problem-7
function findEvenNumbers(arr) {
  const evenNumbers = [];

  for (let i = 0; i < arr.length; i++) {
    if (arr[i] % 2 === 0) {
      evenNumbers.push(arr[i]);
    }
  }

  return evenNumbers;
}

const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];
console.log(findEvenNumbers(numbers));

// ржПржХржЯрж╛ ржлрж╛ржВрж╢ржи ржмрж╛ржирж╛ржмрзЛ ржпрзЗржЯрж╛ ржПржХржЯрж╛ ржЕрзНржпрж╛рж░рзЗ ржирж┐ржмрзЗред

// ржЕрзНржпрж╛рж░рзЗ'рж░ ржкрзНрж░рждрж┐ржЯрж╛ рж╕ржВржЦрзНржпрж╛ржХрзЗ ржЪрзЗржХ ржХрж░ржмрзЛ ржпрзЗ рж╕рзЗржЯрж╛ even (ржЬрзЛрзЬ) ржирж╛ржХрж┐ ржирж╛ред

// ржпрзЗржЗ ржирж╛ржорзНржмрж╛рж░ржЯрж╛ even, ржорж╛ржирзЗ number % 2 === 0, ржУржЧрзБрж▓рзЛржХрзЗ ржПржХржЯрж╛ ржирждрзБржи ржЕрзНржпрж╛рж░рзЗрждрзЗ рж░рж╛ржЦржмрзЛред

// рж╢рзЗрж╖рзЗ рж╕рзЗржЗ ржирждрзБржи ржЕрзНржпрж╛рж░рзЗржЯрж╛ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗ ржжрж┐ржмрзЛред
